# The main properties file to configure your application
#
# Properties can be prefixed by "%".
# "%"" matches a mode you can set as system property. For instance when you
# are using maven you can do: mvn -Dmode=test jetty:run
#
# Using that the following property:
# %test.myproperty=test property
# would overwrite the property
# myproperty=my property
#
# You can define as many environments as you want. Simply set them in the mode.

application.name=Ninja Web Application

application.cookie.prefix=app



# Domain. Provide real domain name, scheme. Context path is detected in runtime.
application.domain=192.168.1.9
#application.domain=127.0.0.1
application.scheme=http://
application.port=8080

# There is no condition logic so uncomment the second options if your port is 80 or 443.
application.schemedomainport=${application.scheme}${application.domain}:${application.port}
#application.schemedomainport=${application.scheme}${application.domain}

# Application base URL that includes scheme, domain and port (optional).
application.baseUrl=${application.schemedomainport}



# Common title of the application in English.
application.titleCommon=Ninja application

# Session.
application.session.send_only_if_changed=false
application.session.transferred_over_https_only=false

# ISO Language Code, optionally followed by a valid ISO Country Code.
application.languages=de,en,es,fr,pt,ru
# Language titles to be displayed in language selector.
application.languageTitles=Deutsch,English,Español,Français,‪Português (Brasil)‬,Русский

# Make sure this is kept in secret.
application.secret = GENERATE_NEW_SECRET_INSTEAD_OF_THIS!



# SSO settings.
# Sub path for SSO related controllers and endpoints, follows the context path.
application.sso.subRoute=/auth

# List of allowed continue URL prefixes, excluding self, defined in ${application.baseUrl}.
application.sso.allowedContinueUrls=



# Root email: will be used to create root user if there is no such in database.
application.root.defaultEmail=root@example.org
application.root.defaultPhone=+16509999999



# Authentication policy settings.
# Policies are described in {@link controllers.sso.auth.policy.DeviceAuthPolicy}.
application.sso.device.auth.policy=AUTO
application.sso.device.auth.policy.append.browser=COOKIE
application.sso.device.auth.policy.append.application=URL_PARAM
application.sso.device.auth.policy.append.parameter=access_token
application.sso.device.auth.policy.append.cookie=${application.cookie.prefix}_token

# Mobile scheme and URL for sending access tokens back to application. Used for MOBILE and AUTO policies.
application.sso.device.auth.policy.application.url=x-com.corporationname.applicationname://auth.callback

# Minimum allowed registration age. Choose wisely.
application.sso.minimumRegistrationAge=13

# Application sign up notification type. Supported types: CONFIRMATION, WELCOME, NONE.
# Please note: web tests expect CONFIRMATION type only.
application.sso.signUpEmailNotificationType=CONFIRMATION

# Whether to produce fake response for non-existing user when asking to restore password.
application.sso.restorePassword.fakeResponseForNonExistingUser=true



# Encryption.
# SSO expirable tokens encryption key. By default, uses Ninja's secret.
application.sso.tokens.encryption.aes.key=${application.secret}

# Strength: 128, 192 or 256 bits. Please, install JCE policy jars for 192 and 256 bits encryption.
application.sso.tokens.encryption.aes.strength=128



# Tokens.
# Access tokens are stored in cookies for Web applications and passed in special URL for mobile applications.
# Access token life time, in seconds.
application.sso.accessToken.ttl=86400

# Time to live for email token, in seconds.
application.sso.emailToken.ttl=86400

# Time to live sign up verification token, in seconds.
application.sso.signUpVerificationToken.ttl=3600

# Time to live for restore password token, in seconds.
application.sso.restorePasswordToken.ttl=3600

# Time to live for XSRF token, in seconds. Don't set this value less then 150 seconds. See admin page source.
application.sso.xsrfToken.ttl=1800



# Captcha.
# Time to live in seconds.
application.sso.captcha.ttl=300
application.sso.captcha.width=240
application.sso.captcha.height=50
application.sso.captcha.dictionary=conf/dictionary.txt
application.sso.captcha.expiredImage=assets/i/expired-captcha.png



# Upstream proxy IP header name, passed by frontend web server like Nginx.
# It is configured with 'proxy_pass' directive like this:
# proxy_set_header        X-Real-IP       $remote_addr;
#
# Make sure it is empty if application runs without frontend web server
# as someone can trick Ninja Application and place something that is not IP.
application.sso.proxy.ipHeaderName=X-Real-IP



# Admin pages properties.
application.sso.admin.users.objectsPerPage = 20
application.sso.admin.dateTimeFormat=yyyy-MM-dd HH:mm



# Email configuration
# Hostname of the smtp server (e.g. smtp.mycompany.com).
smtp.host=localhost
# Port of the smtp server  (e.g. 465).
smtp.port=465
# Whether to enable ssl (true or false)
smtp.ssl=false
# Username and password to access the smtp server
smtp.user=user
smtp.password=pwd
# Enable logging of a huge amount of debug information (true or false)
smtp.debug=false
# Default from for email sending.
smtp.from.default=user@localhost



# Configure JPA
# simply tell Ninja which persistence unit to use.
# The persistence units are defined at META-INF/persistence.xml

ninja.migration.run=false

#ninja.jpa.persistence_unit_name = postgresql-dev
ninja.jpa.persistence_unit_name = postgresql-prod
#ninja.jpa.persistence_unit_name = mysql-dev
#ninja.jpa.persistence_unit_name = mysql-prod



# PostgreSQL configuration
db.connection.url=jdbc:postgresql://127.0.0.1:5432/ninja_sso
db.connection.username=jane
db.connection.password=password



# MySQL configuration
#db.connection.url=jdbc:mysql://127.0.0.1:3306/ninja_sso?autoReconnect=true&useUnicode=true&characterEncoding=utf8&characterResultSets=utf8
#db.connection.username=jane
#db.connection.password=password



# Test configuration
%test.ninja.migration.run=true

%test.ninja.jpa.persistence_unit_name = h2-test

%test.db.connection.url=jdbc:h2:./target/h2database_test
%test.db.connection.username=ra
%test.db.connection.password=
